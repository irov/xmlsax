cmake_minimum_required(VERSION 3.0)

PROJECT(xmlsax C)

OPTION(XMLSAX_EXTERNAL_BUILD "XMLSAX_EXTERNAL_BUILD" OFF)
OPTION(XMLSAX_INSTALL "XMLSAX_INSTALL" OFF )

IF( NOT XMLSAX_EXTERNAL_BUILD )
    if(${CMAKE_C_COMPILER_ID} STREQUAL Clang)
        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall -Werror")
    elseif(${CMAKE_C_COMPILER_ID} STREQUAL AppleClang)
        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall -Werror")
    elseif(${CMAKE_C_COMPILER_ID} STREQUAL GNU)
        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall -Werror")
    elseif(${CMAKE_C_COMPILER_ID} STREQUAL Intel)
        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall -Werror")
    elseif(${CMAKE_C_COMPILER_ID} STREQUAL MSVC)
        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /Wall /WX")
        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /wd4710")
        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /wd4514")
    endif()

    IF(MSVC)
        add_definitions(-D_MSVC_LANG=201402)
        add_definitions(-D_CRT_SECURE_NO_WARNINGS)
        add_definitions(-D_SCL_SECURE_NO_WARNINGS)
    ENDIF()

    SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/lib/${CMAKE_GENERATOR})
    SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/bin/${CMAKE_GENERATOR})
ENDIF()

MACRO(ADD_FILTER group_name)
	SOURCE_GROUP(${group_name} FILES ${ARGN})
	SET(SRC_FILES ${SRC_FILES} ${ARGN})
ENDMACRO()

SET(INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/include/xmlsax)
SET(SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/src)

ADD_FILTER(
xmlsax
	${INCLUDE_DIR}/xmlsax.h
    ${SOURCE_DIR}/xmlsax.c
)

INCLUDE_DIRECTORIES(${PROJECT_NAME} include/xmlsax)

ADD_LIBRARY(${PROJECT_NAME} STATIC ${SRC_FILES})

if(XMLSAX_INSTALL)
    install(DIRECTORY include
        DESTINATION .
        FILES_MATCHING PATTERN "*.hpp" PATTERN "*.h")

    install(TARGETS ${PROJECT_NAME}
        LIBRARY DESTINATION lib
        ARCHIVE DESTINATION lib)
endif()